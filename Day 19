#include <bits/stdc++.h>
using namespace std;

int evaluatePostfix(string expression) {
    stack<int> st;
    stringstream ss(expression);
    string token;

    while (ss >> token) {
        // If token is an operator
        if (token == "+" || token == "-" || token == "*" || token == "/") {
            int b = st.top(); st.pop();
            int a = st.top(); st.pop();
            int result = 0;

            if (token == "+") result = a + b;
            else if (token == "-") result = a - b;
            else if (token == "*") result = a * b;
            else if (token == "/") {
                // integer division truncating towards zero
                result = a / b;
            }

            st.push(result);
        }
        else {
            // Convert operand string to integer and push
            st.push(stoi(token));
        }
    }

    return st.top();
}

int main() {
    string expression;
    getline(cin, expression); // input expression

    cout << evaluatePostfix(expression) << endl;

    return 0;
}